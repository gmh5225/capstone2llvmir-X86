# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(capstone2llvmir-X86)

# Packages
find_package(LLVM REQUIRED CONFIG)

find_package(Clang REQUIRED CONFIG)

# utils
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/utils")
else()
	set(CMAKE_FOLDER utils)
endif()
add_subdirectory(utils)
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# common
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/common")
else()
	set(CMAKE_FOLDER common)
endif()
add_subdirectory(common)
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# Target capstone2llvmir-X86
set(CMKR_TARGET capstone2llvmir-X86)
set(capstone2llvmir-X86_SOURCES "")

list(APPEND capstone2llvmir-X86_SOURCES
	"capstone2llvmir/capstone2llvmir.cpp"
	"capstone2llvmir/capstone2llvmir_impl.cpp"
	"capstone2llvmir/exceptions.cpp"
	"capstone2llvmir/llvmir_utils.cpp"
	"capstone2llvmir/x86/x86.cpp"
	"capstone2llvmir/x86/x86_init.cpp"
	"capstone2llvmir/capstone2llvmir_impl.h"
	"capstone2llvmir/capstone_utils.h"
	"capstone2llvmir/llvmir_utils.h"
	"capstone2llvmir/x86/x86_impl.h"
	"capstone2llvmir/x86/x86.cpp"
	"capstone2llvmir/x86/x86_init.cpp"
	"capstone2llvmir/x86/x86_impl.h"
	"include/retdec/capstone2llvmir/capstone2llvmir.h"
	"include/retdec/capstone2llvmir/exceptions.h"
	"include/retdec/capstone2llvmir/x86/x86.h"
	"include/retdec/capstone2llvmir/x86/x86_defs.h"
	"include/retdec/capstone2llvmir/x86/x86.h"
	"include/retdec/capstone2llvmir/x86/x86_defs.h"
)

list(APPEND capstone2llvmir-X86_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${capstone2llvmir-X86_SOURCES})
add_library(capstone2llvmir-X86 STATIC)

if(capstone2llvmir-X86_SOURCES)
	target_sources(capstone2llvmir-X86 PRIVATE ${capstone2llvmir-X86_SOURCES})
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${capstone2llvmir-X86_SOURCES})

add_definitions(
		${LLVM_DEFINITIONS}
		${CLANG_DEFINITIONS}
)
target_compile_features(capstone2llvmir-X86 PUBLIC
	cxx_std_20
)

target_include_directories(capstone2llvmir-X86 PUBLIC
	"./"
	"${CMAKE_SOURCE_DIR}/include"
	"${CMAKE_SOURCE_DIR}/include/retdec"
	"${CMAKE_SOURCE_DIR}/include/whereami"
	"capstone-retdec/include"
	${LLVM_INCLUDE_DIRS}
	${CLANG_INCLUDE_DIRS}
)

target_link_directories(capstone2llvmir-X86 PUBLIC
	${LLVM_LIBRARY_DIRS}
	${CLANG_LIBRARY_DIRS}
)

target_link_libraries(capstone2llvmir-X86 PUBLIC
	capstone-static
	retdec-common
	retdec-utils
	LLVMSupport
	LLVMAnalysis
	LLVMCore
	LLVMCodeGen
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

